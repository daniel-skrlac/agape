package hr.agape.document.domain;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

/**
 * Domain model for SD_STAVKE (document line).
 * <p>
 * One row = one line on the document (e.g., “Flour 2 kg”).
 * References its parent header via {@link #headerId} (SD_STAVKE.SD_GLAVA_ID → SD_GLAVA.ID).
 * Many technical attributes (name, VAT, UOM, stock flags) are derived by triggers from the item master.
 * </p>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class DocumentLine {
    /**
     * Primary key of SD_STAVKE (generated by SD_STAVKE_SEQ).
     * Column: SD_STAVKE.ID
     */
    private Long id;

    /**
     * Foreign key to the document header.
     * Column: SD_STAVKE.SD_GLAVA_ID → SD_GLAVA.ID
     */
    private Long headerId;

    /**
     * Item/article being dispatched.
     * Column: SD_STAVKE.ARTIKL_ID (FK → SKL_ARTIKLIG.ARTIKL_ID)
     */
    private Integer itemId;

    /**
     * Normalized name/label of the item (often derived).
     * Column: SD_STAVKE.NAZIV_ID (FK → SKL_ANAZIVI.NAZIV_ID)
     * <p>Usually set by triggers based on the chosen {@link #itemId}.</p>
     */
    private Integer nameId;

    /**
     * VAT code (derived from the item’s definition).
     * Column: SD_STAVKE.PDV_ID (FK → SIFREPDV.PDV_ID)
     */
    private Integer vatId;

    /**
     * Unit of measure (derived from the item’s definition).
     * Column: SD_STAVKE.JMJ_ID (FK → SIFRE_JMJ.JMJ_ID)
     */
    private Integer uomId;

    /**
     * Line ordinal on the document (1, 2, 3…).
     * Column: SD_STAVKE.STAVKABR
     * <p>Assigned by trigger if not provided.</p>
     */
    private Integer lineNumber;

    /**
     * Quantity to dispatch.
     * Column: SD_STAVKE.KOLICINA
     * <p>Triggers will compute stock-change flags and update inventory counters.</p>
     */
    private BigDecimal quantity;
}
